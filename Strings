## Links
https://medium.com/analytics-vidhya/string-reference-cheat-sheet-for-python-ce4958235ad5
https://github.com/dennyzhang/cheatsheet-python-A4
https://www.techbeamers.com/python-strings-functions-and-examples/#string-formatting-operators-in-python
https://realpython.com/python-strings/#interpolating-variables-into-a-string

## Create strings in Python

# all of the following are equivalent
my_string = 'Hello'
print(my_string)

my_string = "Hello"
print(my_string)

my_string = '''Hello'''
print(my_string)

# triple quotes string can extend multiple lines
my_string = """Hello, welcome to
           the world of Python"""
print(my_string)


## Indexing
## If we try to access an index " out of the range or use numbers other than an integer ", we will get errors.
str = 'programiz'
print('str = ', str)

#first character
print('str[0] = ', str[0])

#last character
print('str[-1] = ', str[-1])

#slicing 2nd to 5th character
print('str[1:5] = ', str[1:5])

#slicing 6th to 2nd last character
print('str[5:-2] = ', str[5:-2])

## Change or delete String ( Strings are immutable. This means that elements of a string cannot be changed once they have been assigned. 
   We can simply reassign different strings to the same name. ) 
# Reassigning the String
my_string = 'programiz'
my_string = 'python'
print(my_string)

## Delete the String ( We cannot delete or remove characters from a string. But deleting the string entirely is possible.)
my_string = 'python'
del my_string

### String Operations ###

## Concatenation

var1 = 'Python'
var2 = 'String'
print (var1+var2)

## Repetation
var1 = 'Python'
print (var1 * 3)

## Membership Testing ( in && not in )

# example (in)
var1 = 'Python'
print ('n' in var1) # True

# example 9not in)
var1 = 'Python'
print ('N' not in var1) # True





